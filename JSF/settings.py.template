"""
Django settings for JSF project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import ldap
import os
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'D:\web\JSF\logfile.log',  # Specify the path to your log file
        },
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django_auth_ldap': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
        },
        'audit_queries': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
        },
    },
    'root': {
        'handlers': ['file', 'console'],
        'level': 'ERROR',
    },
}







# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'key'

FERNET_KEYS = ['key', 'key']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['fqdn', 'localhost', '127.0.0.1']

#reverse proxy settings
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_TRUSTED_ORIGINS = ['https://fqdn:8443', 'https://localhost', 'https://127.0.0.1']
USE_X_FORWARDED_HOST = True
# Application definition

INSTALLED_APPS = [
    'webserverMaintenance',
    'sites',
    'MainApp',
    'oracleQuery',
    'serverLogs',
    'audit_queries',
    'fernet_fields',
    'timezone_updater',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'custom_modules.middleware.CustomPermissionMiddleware',
]

ROOT_URLCONF = 'JSF.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'shared_templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'JSF.wsgi.application'



# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'impax_db_example': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'MVF',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '1521',
    },
    'ei_db_example': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'APROD',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '1521',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_LDAP_GLOBAL_OPTIONS = {
    ldap.OPT_X_TLS_REQUIRE_CERT: ldap.OPT_X_TLS_NEVER,
}

AUTHENTICATION_BACKENDS = (
    #'custom_modules.custom_ldap_backend.CustomLDAPBackend',
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)
AUTH_LDAP_FIND_GROUP_PERMS = True
AUTH_LDAP_MIRROR_GROUPS = True


AUTH_LDAP_SERVER_URI = ("ldaps://domain_controller:3269")  # Replace with your server's URI
AUTH_LDAP_BIND_DN = "CN=USER,OU=Users,DC=domain,DC=net"  # Optional: if you want to bind as a user
AUTH_LDAP_BIND_PASSWORD = "password"  # Optional: if you want to bind as a user
AUTH_LDAP_USER_SEARCH = LDAPSearch("DC=domain, DC=NET",  # Replace with your specific DN
                                   ldap.SCOPE_SUBTREE, "(sAMAccountName=%(user)s)")

# Optionally, set up caching for LDAP user and group information
AUTH_LDAP_CACHE_GROUPS = True
AUTH_LDAP_GROUP_CACHE_TIMEOUT = 300

AUTH_LDAP_USER_ATTR_MAP = {
    "username": "sAMAccountName",
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail",
}

AUTH_LDAP_GROUP_SEARCH = LDAPSearch("DC=domain, DC=NET",
                                    ldap.SCOPE_SUBTREE, "(objectClass=group)")

AUTH_LDAP_GROUP_TYPE = GroupOfNamesType()

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}



AUTH_LDAP_CACHE_TIMEOUT = 3600

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'  # Redirect to home page
# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/


import logging

logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.DEBUG)



LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static"),]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


SESSION_COOKIE_AGE = 1209600  # Two weeks, in seconds.
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = True
